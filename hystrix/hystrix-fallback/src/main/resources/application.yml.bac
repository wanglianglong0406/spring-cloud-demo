server:
  port: 50000
spring:
  application:
    name: hystrix-consumer
  main:
    allow-bean-definition-overriding: true

eureka:
  client:
    service-url:
      defaultZone: http://peer1:20001/eureka/,http://peer2:20002/eureka/

#开启feign下面的hystrix注解功能
feign:
  hystrix:
    enabled: true

feign-client:
  ribbon:
    #每台机器最大重试次数
    MaxAutoRetries: 0
    #可以在重试几台机器
    MaxAutoRetriesNextServer: 0
    #连接超时
    ConnectTimeout: 1000
    #业务处理超时
    ReadTimeout: 8000
    #在所有HTTP Methord进行重试
    OkToRetryOnAllOperations: false

hystrix:
  command:
    default:
      fallback: #是否开启服务降级
        enabled: true
      execution: #全局超时
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 4000  #超时时间
            interruptOnTimeout: true  #超时以后终止线程
            interruptOnFutureCancel: true #取消的时候终止线程
      requestCache:
        enabled: true # 开启访问缓存功能
    #指定方法
    Myservice#retry(int):
        execution: #全局超时
          isolation:
          thread:
          timeoutInMilliseconds: 2000  #超时时间
          interruptOnTimeout: true  #超时以后终止线程
          interruptOnFutureCancel: true #取消的时候终止线程
    # 正儿八经的参数
    metrics:
      rollingStats:
        timeInMilliseconds: 20000  # 配置时间窗口
    circuitBreaker:
      requestVolumeThreshold: 2 熔断的前提条件（请求的数量），在一定的时间窗口内，请求达到5个以后，才开始进行熔断判断
      errorThresholdPercentage: 50  # 超过50%的失败请求，则熔断开关开启
      sleepWindowInMilliseconds: 15000  # 当熔断开启以后，经过多少秒再进入半开状态
      # 打酱油的路人参数
      enabled: true
      forceOpen: false  # 强制开启熔断开关
      forceClosed: false # 强制关闭熔断开关

# actuator暴露接口
management:
  security:
    enabled: false
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
